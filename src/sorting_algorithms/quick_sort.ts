/**
 * Быстрая сортировка - O(N log N)
 *
 * Алгоритм быстрой сортировки — один из самых быстрых алгоритмов сортировки для больших наборов данных.
 * Быстрая сортировка — это алгоритм «разделяй и властвуй», который рекурсивно разбивает список данных на последовательно меньшие подсписки, состоящие из меньших элементов и больших элементов.
 * Алгоритм продолжает этот процесс до тех пор, пока все данные в списке не будут отсортированы.
 */
export function quickSort(originArray: readonly number[]): number[] {
  // Создаем копию входного массива, чтобы избежать изменения исходного
  const array = [...originArray];

  // Базовый случай рекурсии: если массив содержит 0 или 1 элемент, он уже отсортирован
  if (array.length <= 1) {
    return array;
  }

  // Выбираем первый элемент массива в качестве опорного элемента (pivot)
  const pivot = array[0];

  // Создаем два вспомогательных массива: leftArray для элементов меньше pivot и rightArray для элементов больше или равных pivot
  const leftArray: number[] = [];
  const rightArray: number[] = [];

  // Проходим по всем элементам массива, начиная со второго (индекс 1)
  for (let i = 1; i < array.length; i++) {
    const value = array[i];
    // Если текущий элемент меньше pivot, добавляем его в leftArray
    if (value < pivot) {
      leftArray.push(value);
    } else {
      // Иначе добавляем его в rightArray
      rightArray.push(value);
    }
  }

  // Рекурсивно сортируем leftArray и rightArray и объединяем результаты с pivot
  // Результат рекурсивных вызовов объединяется с опорным элементом:
  // отсортированный leftArray, затем pivot, затем отсортированный rightArray
  return [...quickSort(leftArray), pivot, ...quickSort(rightArray)];
}
